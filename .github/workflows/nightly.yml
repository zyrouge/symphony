name: Nightly

on:
    schedule:
        - cron: "0 0 * * *"
    workflow_dispatch:

env:
    SKIP_RELEASE: "yes"
    SIGNING_KEYSTORE_FILE: ./secrets/signing_key.jks
    BUILD_APK_FILE: ./app/build/outputs/apk/release/app-release.apk
    BUILD_AAB_FILE: ./app/build/outputs/bundle/release/app-release.aab
    OUTPUT_DIR: ./dist

jobs:
    nightly-build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - uses: actions/setup-node@v4
              with:
                  node-version: 18.x
                  cache: npm

            - uses: actions/setup-java@v4
              with:
                  distribution: zulu
                  java-version: 17
                  cache: gradle

            - name: üöß Do prerequisites
              run: npm ci

            - name: üî¢ Get version
              id: app_version
              run: echo "version=$(npm run --silent version:print-nightly)" >> $GITHUB_OUTPUT

            - name: üîé Check for release
              run: |
                  last_tag=$(npm run --silent git:latest-tag)
                  echo "SKIP_RELEASE=$(npm run --silent git:no-affects-app-yn -- $last_tag)" >> $GITHUB_ENV
              env:
                  TAG_NAME: v${{ steps.app_version.outputs.version }}

            - name: üî® Generate certificate
              if: env.SKIP_RELEASE == 'no'
              run: |
                  mkdir -p $(dirname $SIGNING_KEYSTORE_FILE)
                  echo $SIGNING_KEYSTORE_FILE_CONTENT | base64 -di > $SIGNING_KEYSTORE_FILE
              env:
                  SIGNING_KEYSTORE_FILE_CONTENT: ${{ secrets.SIGNING_KEYSTORE_FILE }}

            - name: üî® Build assets
              if: env.SKIP_RELEASE == 'no'
              run: |
                  npm run prebuild
                  chmod +x ./gradlew
                  ./gradlew build
                  ./gradlew bundle
              env:
                  APP_VERSION_NAME: ${{ steps.app_version.outputs.version }}
                  SIGNING_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
                  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
                  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

            - name: üìù Rename assets
              if: env.SKIP_RELEASE == 'no'
              run: |
                  mkdir -p $OUTPUT_DIR
                  mv $BUILD_APK_FILE $OUTPUT_DIR/symphony-nightly-v$APP_VERSION_NAME.apk
                  mv $BUILD_AAB_FILE $OUTPUT_DIR/symphony-nightly-v$APP_VERSION_NAME.aab
              env:
                  APP_VERSION_NAME: ${{ steps.app_version.outputs.version }}

            - name: üöÄ Upload assets
              if: env.SKIP_RELEASE == 'no'
              uses: ncipollo/release-action@v1
              with:
                  tag: v${{ steps.app_version.outputs.version }}
                  artifacts: ${{ env.OUTPUT_DIR }}/*
                  body: "Refer [commits of v${{ steps.app_version.outputs.version }}](https://github.com/zyrouge/symphony/commits/v${{ steps.app_version.outputs.version }}) for the changes."
                  generateReleaseNotes: false
                  draft: false
                  prerelease: true
                  artifactErrorsFailBuild: true

            - name: üîñ Was Release skipped?
              if: env.SKIP_RELEASE == 'yes'
              run: echo "Skipping since tag $TAG_NAME already exists"
              env:
                  TAG_NAME: v${{ steps.app_version.outputs.version }}
